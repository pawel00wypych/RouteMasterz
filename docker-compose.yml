version: '3'

services:
  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
        - db

  db:
    image:
      postgres:14.3
    restart:
      always
    environment:
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_ROOT_PASSWORD=${POSTGRES_ROOT_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  flyway:
    container_name: flyway
    image: flyway/flyway:9.4.0
    environment:
      - FLYWAY_USER=user
      - FLYWAY_PASSWORD=password
      - FLYWAY_SCHEMAS=routemasterz
    command: -url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME} -schemas=routemasterz -user=user -password=password -connectRetries=60 migrate
    volumes:
      - ./src/main/resources/db/migration:/flyway/sql
    depends_on:
      - db


  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    depends_on:
      - backend
    environment:
      - REACT_APP_BACKEND_URL=/api/v1
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./docker/frontend/nginx.conf:/etc/nginx/templates/nginx.conf.template:ro

  nginx:
    image: nginx:stable-alpine
    depends_on:
      - backend
      - frontend
    ports:
      - "${FRONTEND_PORT}:80"
    environment:
      - DEV_CLIENT_IP=${DEV_CLIENT_IP}
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/templates/nginx.conf.template:ro